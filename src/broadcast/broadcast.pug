include ../part-header.pug
	.section.width-max-readable.m-auto
		h1 ðŸ“® Send broadcast
	.section.width-max-readable.m-auto.m-b-3
		#broadcast-audience.box.p-l-1.p-r-1.p-b-1.m-b-1
			h3 Who should get the broadcast?
			#lists-container
				p: strong Which list are you sending to?
				#lists-list No lists found
			#tags-container
				p: strong Enter the tags of subscribers who should receive this email.
				p
					span.m-r-0p5 Tags:
					span#tag-list.flex-inline-list.tag-list
						em.no-tags &lt;none&gt;
				#tags-input-container.grid.left-auto-right-max-content
					div
						input#new-tag-name.input.new-tag-name.w-100(placeholder='Enter a tag')
					button#add-tag-button.button.secondary.add-tag-button Add tag
			#exclude-tags-container
				p: strong Enter the tags of subscribers who should be excluded from this email.
				p
					span.m-r-0p5 Tags:
					span#exclude-tag-list.flex-inline-list.tag-list
						em.no-tags &lt;none&gt;
				#exclude-tags-input-container.grid.left-auto-right-max-content
					div
						input#new-exclude-tag-name.input.new-tag-name.w-100(placeholder='Enter a tag')
					button#add-exclude-tag-button.button.secondary.add-tag-button Add tag
			#subscriber-properties-filter-container
				p: strong Enter the values of subscriber properties to filter by
				p
					span.m-r-0p5 Subscriber properties:
					span#property-list.flex-inline-list.property-list
						em.no-properties &lt;none&gt;
				#add-property-box
					div
						input.property-name.input.w-100(placeholder="Property; e.g. city")
					div
						input.property-value.input.w-100(placeholder="Value; e.g. New York")
					button.button.secondary.add-property-button Add property
			#subscriber-interactions-with-any-email-container
				p: strong Filter by subscriber interactions with any email
				div.m-b-1
					span Filter by subscriber interactions with any email:
					label
						input(type='radio' name='use-interactions-with-any-email' value='no' checked)
						span No
					label
						input(type='radio' name='use-interactions-with-any-email' value='yes')
						span Yes
				div#interaction-with-any-email-controls-wrapper(style='display:none')
					select#interaction-with-any-email-type.input
						option(value='clicked') clicked
						option(value='opened or clicked') opened or clicked
					|
					|
					span any email in the last
					|
					|
					input#interaction-with-any-email-period.input(type='number' step='1' min='0' value='30' size='4')
					|
					|
					span days.
			#subscriber-interactions-container
				p: strong Filter by subscriber interactions with specific emails
				p
					span Interactions:
					<span> </span>
					span#interactions-list
						em.no-interactions &lt;none&gt;
				#new-interaction-box
					p
						button#get-broadcast-history-button.button.secondary Refresh email history
					#interaction-definition-container
						div
							select#email-history-select.input.w-100
						p
							label Sent on date
								br
								select#interaction-email-date.input(type="date")
						div
							label
								input(type="radio" name="interaction-receive" value="did-receive")
								span Did receive
						div
							label
								input(type="radio" name="interaction-receive" value="did-not-receive")
								span Did not receive
						div
							#clear-receive-button-container(style="display:none")
								button#clear-receive-button.button.secondary Clear receive value
						div
							label
								input(type="radio" name="interaction-click" value="did-click")
								span Did click
						div
							label
								input(type="radio" name="interaction-click" value="did-not-click")
								span Did not click
						div
							label
								input(type="radio" name="interaction-open" value="did-open")
								span Did open
						div.m-b-0p5
							label
								input(type="radio" name="interaction-open" value="did-not-open")
								span Did not open

						button#reset-interaction.button.secondary.m-r-0p5 Reset interaction filter
						button#add-interaction-button.button.secondary Add interaction filter
			#ignore-confirmed-container
				p: strong âš  Ignore whether or not the subscriber has been confirmed
				p
					strong Warning!
					|
					|
					span.
						Only use this if you are confident your subscribe process only lets through real
						humans, with their correct email address (for example, it uses a CAPTCHA and
						subscribers have a chance to check and correct their email before submitting). Risks of
						mis-using this feature include increasing the number of complaints against your mailing
						list, having your ability to send emails paused by AWS, among other othings. Preferrably, build confirmation of
						your subscribers' email addresses into your sign-up processes rather than use this
						feature.
				p
					label.m-r-0p5
						input#ignore-confirmed-radio-no(name='ignore-confirmed' type='radio' value='no' checked)
						|
						| No
					label#ignore-confirmed-radio-yes-label
						input#ignore-confirmed-radio-yes(name='ignore-confirmed' type='radio' value='yes')
						|
						| Yes
		#subscriber-count-container.box.p-l-1.p-r-1.p-b-1.m-b-1
			h3 Estimate number of recipients
			p
				| Estimated subscriber count (can take a while to load; if interactions
				| are used, only the final result is accurate):
				<span> </span>
				span#subscriber-count 0
				<span> </span>
				i
					span#subscriber-count-status
			div
				button#count-subscribers-button.button.secondary Count Subscribers
		#broadcast-email-container.box.p-l-1.p-r-1.p-b-1.m-b-1
			h3 Which email should be sent?
			p.
				This must be an email you have already created. If you use more than one email - that is,
				variations of an email - then emails will be sent to a given percentage of the list
				(defaults to half the list), split roughly evenly among the email variations. After a given
				period of time (defaults to 4 hours), the template with the most clicks will be selected as
				the winner and the remainder of the list will receive this template.
			#template-selection
				div.m-b-0p5
					span Selected email/s:
					span#template-selection-list.m-l-0p3
						em No email selected
				div
					label(for="template-name") Add email
				div
					input#template-name.input.w-100(placeholder="e.g. EmailName")
				div.m-t-0p5
					button#select-template-button.button.secondary Use email
				div#template-test-duration-container(style='display:none')
					div Time to allow for test
						label Value
						input#template-test-duration-value(type='number' value='4')
						label Unit
						select#template-test-duration-unit
							option(value='minutes') minutes
							option(value='hours' selected) hours
							option(value='days') days
				#template-list
		#broadcast-time-container.box.p-l-1.p-r-1.p-b-1.m-b-1
			h3 When do you want the broadcast to start sending?
			p.
				Leave blank to send straight away. Uses your local timezone and converts
				to UTC time below. Will use current time if time set is in the past.
			div.date-time-control
				label Date
				input#start-send-at-date.input(placeholder="Date" type="date")
				label Time
				input#start-send-at-time.input(placeholder="Time" type="time")
			p
				span UTC Time:
				<span> </span>
				span#utc-time now
		#confirm-broadcast-container.box.p-l-1.p-r-1.p-b-1.m-b-1
			h3 Confirm and send broadcast
			#broadcast-validation-message
			#broadcast-confirmation-details
			#send-status-message(style='display:none')
			p
				button#send-broadcast-button.button.main Send broadcast
				button#cancel-send-button.button.secondary.m-r-1(style='display:none') Cancel
				button#confirm-send-broadcast-button.button.main(style='display:none') Confirm and send broadcast
		#broadcast-log
include ../part-footer.pug
